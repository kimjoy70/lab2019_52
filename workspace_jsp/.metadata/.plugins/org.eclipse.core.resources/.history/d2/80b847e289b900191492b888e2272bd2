package com.mvc2;

import java.io.File;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;

import com.vo.BoardMasterVO;

public class BoardLogic {
	Logger logger = Logger.getLogger(BoardLogic.class);
	BoardMasterDao bmDao = new BoardMasterDao();
	BoardSubDao bsDao = new BoardSubDao();
	int total = 0;
	public List<Map<String, Object>> boardList(BoardMasterVO pbmVO, HttpServletRequest req) {
		logger.info("boardList 호출 성공");
		logger.info("화면 start:"+pbmVO.getStart());
		logger.info("화면 end:"+pbmVO.getEnd());
		List<Map<String, Object>> boardList = null;
		total = getTot(pbmVO);
		logger.info("화면 total:"+total);		
		int page = 0;
		int pageSize = 0;
		int start = 0;
		int end = 0;
		if(pbmVO.getPage() > 0){
			page = pbmVO.getPage();
		}
		if(pbmVO.getPageSize()>0){
			pageSize = pbmVO.getPageSize();
		}
		if(page > 0){
			start = ((page-1)*pageSize)+1;
			end = page*pageSize;
			pbmVO.setStart(start);
			if(end >total){
				pbmVO.setEnd(total);
			}else{
				pbmVO.setEnd(end);
			}
		}	
		try {
			logger.info("start:"+start);
			logger.info("end:"+end);
			boardList = bmDao.boardList(pbmVO);
		} catch (SQLException se) {
			se.getMessage();
			//throw se;
		}
		return boardList;
	}
	public int boardINS(Map<String, Object> pMap) {
		int result = 0;
		//글번호의 경우 화면에서 입력받는 값이 아니니까.....
		//채번한 값으로 변경해서 담음(bmVO)
		int bm_no = 0;
		int bm_group=0;
		if(pMap.get("bm_group")!=null) {
			bm_group = Integer.parseInt(pMap.get("bm_group").toString());
		}
		bm_no = bmDao.getBmNo();
		pMap.put("bm_no", bm_no);
		try {
			//댓글이니?-bm_no가 있으면? 0보다 크면?, 그룹번호는 기존의 값을 넣음.
			//추가 - bm_group고려
			if(bm_group > 0) {
				//insert here
				//댓글에서 추가될 부분 중 하나는 내 뒤에 있는 글에 대한 bm_step값을 수정하는것.
				//이런 경우에 Dao계층을 추가로 관리하는 것이 좋지 않나?
				bmDao.bmStepUpdate(pMap);
				//bm_pos값 변화분에 대한 처리
				
				pMap.put("bm_pos", (Integer.parseInt(pMap.get("bm_pos").toString())+1));
				//bm_step값 변화분에 대한 처리
				pMap.put("bm_step", (Integer.parseInt(pMap.get("bm_step").toString())+1));
			}
			//새글인지? -글번호를 새로 채번, 그룹번호도 새로 채번
			else {
				//글그룹번호를 새로 채번하는 코드가 추가로 필요함.
				bm_group =bmDao.getBmGroup();
				pMap.put("bm_group", bm_group);
				logger.info("bm_group:"+bm_group);
				//insert here
				//bm_pos값 변화분에 대한 처리
				pMap.put("bm_pos", 0);
				//bm_step값 변화분에 대한 처리				
				pMap.put("bm_step", 0);
			}
			result = bmDao.boardMINS(pMap);
			//첨부파일이 존재하니? - 첨부파일이 있을 경우에만 호출하기
			if(pMap.get("bs_file")!=null & pMap.get("bs_file").toString().length()>0) {
				logger.info("첨부파일 정보 : "+pMap.get("bs_file").toString());
				//첨부파일 저장시 마스터테이블에서 채번된 번호와 같은 번호를 담음.
				pMap.put("bm_no", bm_no);
				pMap.put("bs_seq", 1);
				bsDao.boardSINS(pMap);
			}
		} catch (Exception e) {
			logger.info("Exception "+e.toString());
		}	
		return result;
	}
	public void boardDEL(Map<String, Object> pMap) {
		try {
			bmDao.boardMDelete(pMap);
			String filePath = "C:\\workspace_jsp\\dev_jsp\\WebContent\\pds\\";
			//기존 첨부파일이 존재하면?
			logger.info("bs_file:"+pMap.get("bs_file"));
			String filename = pMap.get("bs_file").toString();
			String fullPath = filePath+filename;
			//실제 존재하는 파일이름을 객체로 생성해주는 클래스
			File file = new File(fullPath);
			if(file!=null) {
				if(file.exists()) {//그 파일이 서버에 존재하니?
					boolean isOk = file.delete();
					logger.info("삭제유무:"+isOk);
					pMap.put("b_seq",1);
					bsDao.boardSDelete(pMap);
				}
			}
		} catch (Exception e) {
			logger.info("Exception : "+e.toString());
		}		
	}
	public int getTot(BoardMasterVO pbmVO) {
		total = bmDao.totalRecord(pbmVO);//20
		return total;
	}
}







