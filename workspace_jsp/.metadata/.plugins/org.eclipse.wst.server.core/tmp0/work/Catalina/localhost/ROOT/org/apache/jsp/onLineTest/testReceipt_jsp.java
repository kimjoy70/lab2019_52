/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.19
 * Generated at: 2019-08-02 23:55:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.onLineTest;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.vo.MemberVO;
import java.util.Map;
import java.util.Iterator;
import java.util.List;
import com.vo.TakeExaminationVO;

public final class testReceipt_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("com.vo.MemberVO");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("com.vo.TakeExaminationVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");

	Map<String,Object> pMap = (Map<String,Object>)session.getAttribute("pMap");
	String s_memid = null;
	String s_memname = null;
	if(pMap!=null){
		s_memid = pMap.get("mem_id").toString();
		s_memname = pMap.get("mem_name").toString();		
	}
	//시험 접수 내용 가져오기
	List<TakeExaminationVO> list = (List)pMap.get("key");
	Iterator<TakeExaminationVO> iter = list.iterator();
	while(iter.hasNext()) {
		TakeExaminationVO teVO = (TakeExaminationVO)iter.next();
		out.print("rMap:"+teVO.getExam_date()+" , "+teVO.getSub_cd()+" , "+teVO.getExam_no());
	}	

      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>자격시험 - 정보처리기사</title>\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"/themes/default/easyui.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"/themes/icon.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"/demo/demo.css\">\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/js/jquery.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/js/jquery.easyui.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    \tvar g_paycheck=0;\r\n");
      out.write("    \tfunction receipt(){\r\n");
      out.write("    \t\talert(g_paycheck);\r\n");
      out.write("    \t\tif(g_paycheck==1){\r\n");
      out.write("\t    \t\t$(\"#f_receipt\").attr(\"method\",\"get\");\r\n");
      out.write("\t    \t\t$(\"#f_receipt\").attr(\"action\",\"examReceipt.kos\");\r\n");
      out.write("\t    \t\t//$(\"#f_receipt\").submit();\r\n");
      out.write("    \t\t}else{\r\n");
      out.write("    \t\t\talert(\"응시료 납부하세요.\");\r\n");
      out.write("    \t\t\treturn;\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t}\r\n");
      out.write("    \tfunction goPayment(){\r\n");
      out.write("    \t\tg_paycheck=1;\r\n");
      out.write("    \t}\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t    function myformatter(date){\r\n");
      out.write("\t        var y = date.getFullYear();\r\n");
      out.write("\t        var m = date.getMonth()+1;\r\n");
      out.write("\t        var d = date.getDate();\r\n");
      out.write("\t        return y+'-'+(m<10?('0'+m):m)+'-'+(d<10?('0'+d):d);\r\n");
      out.write("\t    }\r\n");
      out.write("\t    function myparser(s){\r\n");
      out.write("\t        if (!s) return new Date();\r\n");
      out.write("\t        var ss = (s.split('-'));\r\n");
      out.write("\t        var y = parseInt(ss[0],10);//두번째 파라미터는 몇 진수인가를 의미함.\r\n");
      out.write("\t        var m = parseInt(ss[1],10);\r\n");
      out.write("\t        var d = parseInt(ss[2],10);\r\n");
      out.write("\t        if (!isNaN(y) && !isNaN(m) && !isNaN(d)){\r\n");
      out.write("\t            return new Date(y,m-1,d);\r\n");
      out.write("\t        } else {\r\n");
      out.write("\t            return new Date();\r\n");
      out.write("\t        }\r\n");
      out.write("\t    }\t\r\n");
      out.write("\t\t$(document).ready(function (){\r\n");
      out.write("\t\t\tg_paycheck=0;\r\n");
      out.write("\t\t\t$(\"#mem_name\").textbox('setValue','");
      out.print(s_memname);
      out.write("');\r\n");
      out.write("\t\t\t$('#cb_subject').combobox({\r\n");
      out.write("\t\t\t    url:'/onLineTest/subjectList.kos?work=onLineTest',\r\n");
      out.write("\t\t\t    valueField:'SUB_CD',\r\n");
      out.write("\t\t\t    textField:'SUB_NAME',\r\n");
      out.write("\t\t        onSelect: function(rec){\r\n");
      out.write("\t\t            var c_subcd = rec.SUB_CD;\r\n");
      out.write("\t\t            $.ajax({\r\n");
      out.write("\t\t            \tmethod:\"get\",\r\n");
      out.write("\t\t            \turl:\"/onLineTest/examFee.kos?work=onLineTest&sub_cd=\"+c_subcd,\r\n");
      out.write("\t\t            \tsuccess:function(data){\r\n");
      out.write("\t\t            \t\talert(\"fee : \"+data);\r\n");
      out.write("\t\t            \t\t$(\"#exam_fee\").textbox('setValue',data);\r\n");
      out.write("\t\t            \t}\r\n");
      out.write("\t\t            });\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t\t\t});\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("    <div style=\"margin:20px 0;\"></div>\r\n");
      out.write("    <div class=\"easyui-panel\" title=\"자격시험 접수\" style=\"width:100%;max-width:600px;padding:30px 60px;\">\r\n");
      out.write("    \t<form id=\"f_receipt\">\r\n");
      out.write("    \t\t<input type=\"hidden\" id=\"mem_id\" name=\"mem_id\" value=\"");
      out.print(s_memid);
      out.write("\"/>\r\n");
      out.write("    \t\t<input type=\"hidden\" id=\"work\" name=\"work\" value=\"onLineTest\"/>\r\n");
      out.write("        <div style=\"margin-bottom:20px\">\r\n");
      out.write("            <input class=\"easyui-textbox\" id=\"mem_name\" name=\"mem_name\" label=\"이름:\" labelPosition=\"top\" style=\"width:160px;\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div style=\"margin-bottom:20px\">\r\n");
      out.write("            <input class=\"easyui-datebox\" id=\"exam_date\" name=\"exam_date\" labelPosition=\"top\" label=\"응시일:\" data-options=\"formatter:myformatter,parser:myparser\" style=\"width:150;\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div style=\"margin-bottom:20px\">\r\n");
      out.write("            <select class=\"easyui-combobox\" id=\"cb_subject\" name=\"sub_cd\" label=\"수험과목선택:\" labelPosition=\"top\" data-options=\"prompt:'수험과목을 선택하세요'\" style=\"width:400px;\">\r\n");
      out.write("            </select>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div style=\"margin-bottom:20px\">\r\n");
      out.write("            <input class=\"easyui-textbox\" id=\"exam_fee\" name=\"exam_fee\" label=\"응시료:납부해야 접수 됩니다\" labelPosition=\"top\" style=\"width:200px;\">\r\n");
      out.write("            <a href=\"javascript:goPayment()\" class=\"easyui-linkbutton\" iconCls=\"icon-ok\" style=\"width:120px;height:32px\">응시료납부</a>            \r\n");
      out.write("        </div>\r\n");
      out.write("        <div>\r\n");
      out.write("            <a href=\"javascript:receipt()\" class=\"easyui-linkbutton\" iconCls=\"icon-ok\" style=\"width:100%;height:32px\">접수</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>    \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
