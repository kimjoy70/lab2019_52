/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.19
 * Generated at: 2019-05-31 23:20:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.semanticUI;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Base64.Decoder;
import java.util.Base64;

public final class memberListTabs_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/semanticUI/../common/easyui_common.jsp", Long.valueOf(1559344727547L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Base64.Decoder");
    _jspx_imports_classes.add("java.util.Base64");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");

	String smem_id = (String)session.getAttribute("smem_id");
	byte[] encodeBytes = smem_id.getBytes();
	out.print("db_id:"+smem_id);
	Decoder idDecoder = Base64.getDecoder();
	byte[] decodeBytes = idDecoder.decode(encodeBytes);
	String org_id = new String(decodeBytes);
	out.print("org_id:"+org_id);

      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://www.jeasyui.com/easyui/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/semantic-ui@2.3.3/dist/semantic.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/semantic-ui@2.3.3/dist/semantic.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/semantic-ui@2.3.3/dist/semantic.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/semantic-ui@2.3.3/dist/semantic.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/themes/default/easyui.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/demo/demo.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/themes/icon.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/commons.js\"></script>");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tJ.noConflict();\r\n");
      out.write("\tvar J = jQuery; \r\n");
      out.write("\tvar vfrom_id;//전역변수\r\n");
      out.write("\tfunction memoForm(){\r\n");
      out.write("\t\t//alert(\"쪽지쓰기화면 : \"+vfrom_id);\r\n");
      out.write("\t\tJ('#dl_memoForm').dialog('open');\r\n");
      out.write("\t\t//주의 : textbox에 값을 초기화 할때 val(), text()사용불가\r\n");
      out.write("\t\tJ('#to_id').textbox('setValue',vfrom_id);\r\n");
      out.write("\t\t//주의 :자바스크립트 코드와 jsp코드를 같이 사용할 수 없지만\r\n");
      out.write("\t\t//지금 처럼 자바스크립트 변수(값)에 익스프레션을 이용하면 값을 담을 수 있다.(언제? 이종간에도)\r\n");
      out.write("\t\t//단 단점은 문자열 상수가 박혀서 동적으로 값이 변할 수 없다.\r\n");
      out.write("\t\t//자바스크립트는 클라이언트 언어이고 익스프레션은 서버 언어임. 처리 주체가 다름.\r\n");
      out.write("\t\t//서버 코드가 먼저 실행됨(값이 결정되었다.)\r\n");
      out.write("\t\tJ('#from_id').textbox('setValue','");
      out.print(org_id);
      out.write("');\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction memoInsert(){\r\n");
      out.write("\t\tJ(\"#f_memo\").attr(\"method\",\"post\");\r\n");
      out.write("\t\tJ(\"#f_memo\").attr(\"action\",\"./member.kos\");\r\n");
      out.write("\t\tJ(\"#f_memo\").submit();\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"p_member\" class=\"easyui-panel\" title=\"쪽지관리\" \r\n");
      out.write("        style=\"width:650px;height:400px;padding:10px;background:#fafafa;\"\r\n");
      out.write("        data-options=\"closable:true,collapsible:true,minimizable:true,maximizable:true\">\r\n");
      out.write("\t<!-- insert here -->\r\n");
      out.write("\t<div class=\"easyui-tabs\" style=\"width:570px;height:340px;\">\r\n");
      out.write("\t    <div title=\"회원관리\" style=\"padding:10px;\">\r\n");
      out.write("\t\t\t<table id=\"dg_member\"></table>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t    <div title=\"받은쪽지함\" closable=\"true\" style=\"padding:10px;\">\r\n");
      out.write("\t\t\t<table id=\"dg_receive\"></table>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t    <div title=\"보낸쪽지함\" iconCls=\"icon-reload\" closable=\"true\" style=\"padding:10px;\">\r\n");
      out.write("\t\t\t<table id=\"dg_send\"></table>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t</div>\t\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tJ('#p_member').panel({\r\n");
      out.write("\t\tonClose:function(){\r\n");
      out.write("\t\t\tself.close();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}); \r\n");
      out.write("\tJ('#dg_member').datagrid({\r\n");
      out.write("\t\twidth:'500px',\r\n");
      out.write("\t\theight:'250px',\r\n");
      out.write("\t\tsingleSelect:true,\r\n");
      out.write("\t    url:'./member.kos?gubun=memberList',\r\n");
      out.write("\t    columns:[[\r\n");
      out.write("\t        {field:'RNO',title:'번호',width:100, align:'center'},\r\n");
      out.write("\t        {field:'MEM_ID',title:'아이디',width:100, align:'center'},\r\n");
      out.write("\t        {field:'MEM_NAME',title:'이름',width:120, align:'center'},\r\n");
      out.write("\t        {field:'ACTION',title:'',width:120, align:'center', hidden:true},\r\n");
      out.write("            {field:'ACTIONUI',title:'',width:120,align:'center',\r\n");
      out.write("                formatter:function(value,row,index){\r\n");
      out.write("                        var e = '<a href=\"javascript:memoForm()\">쪽지보내기</a> ';\r\n");
      out.write("                        return e;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\t    ]],\r\n");
      out.write("\t    onClickRow:function(index,row){\r\n");
      out.write("\t    \tvfrom_id = row.MEM_ID;\r\n");
      out.write("\t    }\r\n");
      out.write("/* \t\tdata: [\r\n");
      out.write("\t\t\t{NO:'1', MEM_ID:'haha1', MEM_NAME:'이순신1'},\r\n");
      out.write("\t\t\t{NO:'2', MEM_ID:'haha2', MEM_NAME:'이순신2'},\r\n");
      out.write("\t\t\t{NO:'3', MEM_ID:'haha3', MEM_NAME:'이순신3'}\r\n");
      out.write("\t\t] */\r\n");
      out.write("\t});/////////////////////////end of dg_member\r\n");
      out.write("/* 받은 쪽지함 시작 */\r\n");
      out.write("\tJ('#dg_receive').datagrid({\r\n");
      out.write("\t\twidth:'500px',\r\n");
      out.write("\t\theight:'250px',\r\n");
      out.write("\t\tsingleSelect:true,\r\n");
      out.write("\t    url:'./member.kos?gubun=receiveMemoList&to_id=");
      out.print(smem_id);
      out.write("',\r\n");
      out.write("\t    columns:[[\r\n");
      out.write("\t        {field:'RNO',title:'번호',width:100, align:'center'}\r\n");
      out.write("\t       ,{field:'CDATE',title:'보낸날짜',width:100, align:'center'}\r\n");
      out.write("\t       ,{field:'MEM_NAME',title:'보낸이',width:120, align:'center'}\r\n");
      out.write("\t       ,{field:'READ_YN',title:'개봉여부',width:120, align:'center'}\r\n");
      out.write("\t    ]],\r\n");
      out.write("\t    onClickRow:function(index,row){\r\n");
      out.write("\t    \tvfrom_id = row.MEM_ID;\r\n");
      out.write("\t    }\r\n");
      out.write("\t});\r\n");
      out.write("/* 받은 쪽지함  끝   */\r\n");
      out.write("</script>\r\n");
      out.write("<!-- 쪽지 쓰기 팝업창 시작 -->\r\n");
      out.write("<div id=\"dl_memoForm\">\r\n");
      out.write("<!-- 사용자가 입력한 값을 전송할 땐 form전송 처리 할것. -->\r\n");
      out.write("\t<form id=\"f_memo\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"gubun\" value=\"memoInsert\">\r\n");
      out.write("\t<table width=\"500px\" height=\"auto\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td width=\"100px\">받는이</td>\r\n");
      out.write("\t\t<td width=\"350px\">\r\n");
      out.write("\t\t<!-- 쪽지쓰기 클릭했을 때 그 로우의 아이디값을 읽어서 담기 -->\r\n");
      out.write("\t\t<input id=\"to_id\" name=\"to_id\" class=\"easyui-textbox\" data-options=\"iconCls:'icon-man'\" style=\"width:200px\">\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td width=\"100px\">보내는이</td>\r\n");
      out.write("\t\t<!-- 현재 로그인한 상태이므로 세션에서 이름을 읽어서 담기 -->\r\n");
      out.write("\t\t<td width=\"350px\"><input id=\"from_id\" name=\"from_id\" class=\"easyui-textbox\" style=\"width:200px\"></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td width=\"100px\">내용</td>\r\n");
      out.write("\t\t<!-- 쪽지 내용만 사용자로부터 입력 받기 -->\r\n");
      out.write("\t\t<td width=\"350px\"><input id=\"memo_content\" name=\"memo_content\" class=\"easyui-textbox\" multiline=\"true\" style=\"width:300px;height:50px\"></td>\r\n");
      out.write("\t</tr>\t\t\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<table width=\"500px\" height=\"30px\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"2\">\r\n");
      out.write("\t\t\t<a id=\"btn\" href=\"javascript:memoInsert()\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-ok'\">보내기</a>\r\n");
      out.write("<!-- href속성에는 페이지 요청뿐 아니라 자바스크립트 함수도 호출 가능함. -->\t\t\t\r\n");
      out.write("\t\t\t<a id=\"btn\" href=\"javascript:J('#dl_memoForm').dialog('close')\" \r\n");
      out.write("\t\t\tclass=\"easyui-linkbutton\" data-options=\"iconCls:'icon-no'\">닫기</a>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tJ('#dl_memoForm').dialog({\r\n");
      out.write("\t    title: '쪽지쓰기',\r\n");
      out.write("\t    width: 500,\r\n");
      out.write("\t    height: 200,\r\n");
      out.write("\t    closed: true,\r\n");
      out.write("\t    cache: false,\r\n");
      out.write("\t    modal: true\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("<!-- 쪽지 쓰기 팝업창 끝  -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
