CREATE OR REPLACE PROCEDURE SCOTT.MY_PROC( P_RC OUT SYS_REFCURSOR ) 
    IS 
    BEGIN 
      OPEN P_RC 
       FOR SELECT deptno, dname FROM dept; 
    END;
/

variable p_dept REFCURSOR;

exec my_proc(:p_dept);

print p_dept;

package com.jdbc;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Types;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import com.vo.DeptVO;

import oracle.jdbc.OracleCallableStatement;
import oracle.jdbc.internal.OracleTypes;

public class My_proc {
/*    CREATE OR REPLACE PROCEDURE SCOTT.MY_PROC( P_RC OUT SYS_REFCURSOR )  
    IS  
    BEGIN  
      OPEN P_RC  
       FOR SELECT deptno, dname FROM dept;  
    END;
    /    */
    Connection con = null;
    //프로시저를 call할 때는 statement가 아니라 CallableStatement를 사용한다.
    CallableStatement cstmt = null;
    DBConnectionMgr2 dbMgr = new DBConnectionMgr2();    
    OracleCallableStatement ocstmt = null;
    ResultSet rs = null;
    public List<DeptVO> myProc() {
        List<DeptVO> deptList = new ArrayList<DeptVO>();
        //물리적으로 떨어져 있는 서버에 연결시 실패할 수 있으므로 .......
        //드라이버 클래스가 존재하지 않아서.....
        //또는 ip주소가 맞지 않아서 혹은 네트워크가 연결되어 있지 않아서....
        //또는 작성한 DML구문이나 프로시저에 에러가 있는 상태이어서...
        try {
            con = dbMgr.getConnection();
            cstmt = con.prepareCall("{call MY_PROC(?)}");
            //오라클 서버와 연결 통로가 확보 되었고 두 개의 ?자리 중 첫번째가 read속성이므로
            //p_empno를 첫번째 ?자리에 설정해야 함.
            cstmt.registerOutParameter(1,OracleTypes.CURSOR);
            cstmt.execute();
            ocstmt = (OracleCallableStatement)cstmt;
            ResultSet cursor =  ocstmt.getCursor(1);
            //System.out.println("cursor:"+cursor.next());
            DeptVO dvo = null;
            while (cursor.next ()) {
                dvo = new DeptVO();
                dvo.setDeptno(cursor.getInt(1));
                dvo.setDname(cursor.getString(2));
                deptList.add(dvo);
                //System.out.print (cursor.getInt(1)+"          ");
                //System.out.println (cursor.getString (2));
            }
        } catch (Exception e) {
            System.out.println(e.getMessage()+", "+e.toString());//힌트를 얻을 수 있다.
        }
        return deptList;
    }
    public static void main(String[] args) {
        My_proc mproc = new My_proc(
                );
        List<DeptVO> deptList = mproc.myProc();
        for(DeptVO dvo:deptList) {
            System.out.println(dvo.getDeptno()+" , "+dvo.getDname());
        }
    }

}


